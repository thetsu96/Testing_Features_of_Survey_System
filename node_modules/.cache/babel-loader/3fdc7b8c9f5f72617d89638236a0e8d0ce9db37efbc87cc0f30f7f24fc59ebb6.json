{"ast":null,"code":"var _jsxFileName = \"/home/thet/Documents/Study React/browser's local storage/testing_local_storage/src/Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const [answers, setAnswers] = useState(() => {\n    const savedAnswers = localStorage.getItem('surveyAnswers');\n    return savedAnswers ? JSON.parse(savedAnswers) : {\n      subQuestion: '',\n      subQuestion2: '',\n      question2: '',\n      question3: '',\n      question4: '',\n      question5: [],\n      question6: '',\n      question7: ''\n    };\n  });\n  const [currentScreen, setCurrentScreen] = useState(() => {\n    const savedScreen = localStorage.getItem('currentScreen');\n    return savedScreen ? parseInt(savedScreen, 10) : 1;\n  });\n  const [screenHistory, setScreenHistory] = useState([]);\n\n  // Save answers to localStorage whenever they change\n  useEffect(() => {\n    const timestamp = new Date().toISOString();\n    localStorage.setItem('surveyAnswers', JSON.stringify({\n      answers,\n      timestamp\n    }));\n  }, [answers]);\n\n  // Save current screen and history to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('currentScreen', currentScreen);\n    localStorage.setItem('screenHistory', JSON.stringify(screenHistory));\n  }, [currentScreen, screenHistory]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      setAnswers(prevAnswers => {\n        const newQuestion5 = checked ? [...prevAnswers.question5, value] : prevAnswers.question5.filter(v => v !== value);\n        return {\n          ...prevAnswers,\n          [name]: newQuestion5\n        };\n      });\n    } else {\n      setAnswers(prevAnswers => ({\n        ...prevAnswers,\n        [name]: value\n      }));\n    }\n  };\n  const handleNext = () => {\n    if (currentScreen === 1) {\n      if (answers.subQuestion === 'option1') {\n        setCurrentScreen(2); // Link Option 1 to Main Question 2\n      } else if (answers.subQuestion === 'option2') {\n        setCurrentScreen(3); // Link Option 2 to Sub-Question 2\n      } else if (answers.subQuestion === 'option3') {\n        setCurrentScreen(4); // Link Option 3 to Main Question 4\n      }\n    } else if (currentScreen === 2) {\n      setCurrentScreen(5); // Link Sub-Question 2.1 to Main Question 5\n    } else if (currentScreen === 3) {\n      setCurrentScreen(6); // Link Sub-Question 2.2 to Main Question 6\n    } else if (currentScreen === 4) {\n      setCurrentScreen(7); // Link Sub-Question 2.3 to Main Question 7\n    } else if (currentScreen < 7) {\n      setCurrentScreen(currentScreen + 1);\n    }\n    setScreenHistory([...screenHistory, currentScreen]); // Add current screen to history\n  };\n  const handleBack = () => {\n    if (screenHistory.length > 0) {\n      const prevScreen = screenHistory.pop(); // Get the previous screen from history\n      setCurrentScreen(prevScreen);\n      setScreenHistory([...screenHistory]); // Update history\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Survey, \"dzvnJGrgi/n90HnNz6/glR8yjO0=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Survey","_s","answers","setAnswers","savedAnswers","localStorage","getItem","JSON","parse","subQuestion","subQuestion2","question2","question3","question4","question5","question6","question7","currentScreen","setCurrentScreen","savedScreen","parseInt","screenHistory","setScreenHistory","timestamp","Date","toISOString","setItem","stringify","handleChange","e","name","value","type","checked","target","prevAnswers","newQuestion5","filter","v","handleNext","handleBack","length","prevScreen","pop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/thet/Documents/Study React/browser's local storage/testing_local_storage/src/Survey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Survey = () => {\n  const [answers, setAnswers] = useState(() => {\n    const savedAnswers = localStorage.getItem('surveyAnswers');\n    return savedAnswers ? JSON.parse(savedAnswers) : {\n      subQuestion: '',\n      subQuestion2: '',\n      question2: '',\n      question3: '',\n      question4: '',\n      question5: [],\n      question6: '',\n      question7: ''\n    };\n  });\n\n  const [currentScreen, setCurrentScreen] = useState(() => {\n    const savedScreen = localStorage.getItem('currentScreen');\n    return savedScreen ? parseInt(savedScreen, 10) : 1;\n  });\n\n  const [screenHistory, setScreenHistory] = useState([]);\n\n  // Save answers to localStorage whenever they change\n  useEffect(() => {\n    const timestamp = new Date().toISOString();\n    localStorage.setItem('surveyAnswers', JSON.stringify({ answers, timestamp }));\n  }, [answers]);\n\n  // Save current screen and history to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('currentScreen', currentScreen);\n    localStorage.setItem('screenHistory', JSON.stringify(screenHistory));\n  }, [currentScreen, screenHistory]);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    if (type === 'checkbox') {\n      setAnswers((prevAnswers) => {\n        const newQuestion5 = checked\n          ? [...prevAnswers.question5, value]\n          : prevAnswers.question5.filter((v) => v !== value);\n        return {\n          ...prevAnswers,\n          [name]: newQuestion5\n        };\n      });\n    } else {\n      setAnswers((prevAnswers) => ({\n        ...prevAnswers,\n        [name]: value\n      }));\n    }\n  };\n\n  const handleNext = () => {\n    if (currentScreen === 1) {\n      if (answers.subQuestion === 'option1') {\n        setCurrentScreen(2); // Link Option 1 to Main Question 2\n      } else if (answers.subQuestion === 'option2') {\n        setCurrentScreen(3); // Link Option 2 to Sub-Question 2\n      } else if (answers.subQuestion === 'option3') {\n        setCurrentScreen(4); // Link Option 3 to Main Question 4\n      }\n    } else if (currentScreen === 2) {\n      setCurrentScreen(5); // Link Sub-Question 2.1 to Main Question 5\n    } else if (currentScreen === 3) {\n      setCurrentScreen(6); // Link Sub-Question 2.2 to Main Question 6\n    } else if (currentScreen === 4) {\n      setCurrentScreen(7); // Link Sub-Question 2.3 to Main Question 7\n    } else if (currentScreen < 7) {\n      setCurrentScreen(currentScreen + 1);\n    }\n    setScreenHistory([...screenHistory, currentScreen]); // Add current screen to history\n  };\n\n  const handleBack = () => {\n    if (screenHistory.length > 0) {\n      const prevScreen = screenHistory.pop(); // Get the previous screen from history\n      setCurrentScreen(prevScreen);\n      setScreenHistory([...screenHistory]); // Update history\n    }\n  };\n\n  return (\n    <div>\n      <h1>Survey</h1>\n\n      {/* Your code for rendering questions and handling navigation */}\n    </div>\n  );\n};\n\nexport default Survey;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}